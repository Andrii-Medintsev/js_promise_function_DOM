{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","messageText","nodeName","id","Promise","resolve","addEventListener","printMessage","message","notification","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAClBC,IAAAA,EACQD,UAAAA,OAAAA,EACRD,4BAAAA,OAAAA,EAAQG,SAAiBH,UAAAA,OAAAA,EAAQI,GAFvC,KAIO,OAAA,IAAIC,QAAQ,SAACC,GAClBN,EAAQO,iBAAiBN,EAAW,WAClCK,EAAQJ,OAKd,IAAMM,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,UAAUC,IAAI,WAC3BJ,EAAaK,YAAcN,EAE3BE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.b8aaa8eb.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const messageText\n    = `It was ${eventName} on the element:\n      ${element.nodeName}, id: ${element.id}.`;\n\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(messageText);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('message');\n  notification.textContent = message;\n\n  document.body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}